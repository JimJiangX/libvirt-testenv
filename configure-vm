#!/usr/bin/env python

import os.path
from optparse import OptionParser
import libvirt

template_dir = '/opt/template/'
image_base_dir = '/home/images/'

def vm_template(name, memory, cpus, cdrom, imagefile, net):
    vm=""" 
    <domain type='kvm'>
  <name>%s</name>
  <memory unit='KiB'>%s</memory>
  <vcpu>%s</vcpu>
  <os>
    <type arch='x86_64' machine='rhel6.4.0'>hvm</type>
    <boot dev='cdrom'/>
    <bootmenu enable='no'/>
  </os>
  <features>
    <acpi/>
    <apic/>
    <pae/>
  </features>
  <clock offset='utc'/>
  <on_poweroff>destroy</on_poweroff>
  <on_reboot>restart</on_reboot>
  <on_crash>restart</on_crash>
  <devices>
    <emulator>/usr/bin/kvm</emulator>
    <disk type='file' device='cdrom'>
      <source file='%s'/>
      <target dev='hdb' bus='ide'/>
      <readonly/>
    </disk>
    <disk type='file' device='disk'>
      <driver name='qemu' type='raw' cache='writeback'/>
      <source file='%s'/>
      <target dev='vda' bus='virtio'/>
      <address type='pci' domain='0x0000' bus='0x00' slot='0x06' function='0x0'/>
    </disk>
    <interface type='network'>
        <source network='%s'/>
        <address type='pci' domain='0x0000' bus='0x00' slot='0x04' function='0x0'/>
    </interface>
    <controller type='ide' index='0'>
      <address type='pci' domain='0x0000' bus='0x00' slot='0x01' function='0x1'/>
    </controller>
    <input type='mouse' bus='ps2'/>
    <graphics type='vnc' port='-1' autoport='yes'/>
    <video>
      <model type='cirrus' vram='9216' heads='1'/>
      <address type='pci' domain='0x0000' bus='0x00' slot='0x02' function='0x0'/>
    </video>
    <memballoon model='virtio'>
      <address type='pci' domain='0x0000' bus='0x00' slot='0x07' function='0x0'/>
    </memballoon>
  </devices>
  </domain>

    """ % (name, memory, cpus, cdrom, imagefile, net)
    return vm 

def main():
    parser = OptionParser() 
    parser.add_option("-a", "--name", dest="name", help="name of your vm")
    parser.add_option("-i", "--iso", dest="iso", default=True, help="iso your define")
    parser.add_option("-n", "--network", dest="network", default=True, help="network name")
    (options, args) = parser.parse_args() 

    image = image_base_dir + options.name + ".img"
    libvirt_template = vm_template(options.name, "4097152", "2", options.iso, image, options.network) 
    conn=libvirt.open("qemu:///system")
    a = conn.defineXML(libvirt_template)

if __name__ == '__main__':
    main()
